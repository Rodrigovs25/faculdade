    No programa 8, há um problema de do tamanho da alocação de memória na variável source que tem 26 posições e
é feito uma atribuição no for com 27 vezes o que está errado, como foi mostrado no valgrind:

==3612== Memcheck, a memory error detector
==3612== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3612== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3612== Command: ./c8
==3612== 
==3612== Invalid read of size 1
==3612==    at 0x1091D2: main (c8.c:9)
==3612==  Address 0x4a480ba is 0 bytes after a block of size 26 alloc'd
==3612==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3612==    by 0x1091B1: main (c8.c:6)
==3612== 
==3612== 
==3612== HEAP SUMMARY:
==3612==     in use at exit: 0 bytes in 0 blocks
==3612==   total heap usage: 2 allocs, 2 frees, 53 bytes allocated
==3612== 
==3612== All heap blocks were freed -- no leaks are possible
==3612== 
==3612== For lists of detected and suppressed errors, rerun with: -s
==3612== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Para resolver o programa, foi feito uma alocação de tamanho 27 na variável source.