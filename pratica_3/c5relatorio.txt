    No programa 5, não tem a utilização do free para desalocar a variável intArray, como foi mostrado no valgrind:

==2615== Memcheck, a memory error detector
==2615== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2615== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2615== Command: ./c5
==2615== 
intArray[772]: 772
==2615== 
==2615== HEAP SUMMARY:
==2615==     in use at exit: 4,000 bytes in 1 blocks
==2615==   total heap usage: 2 allocs, 1 frees, 5,024 bytes allocated
==2615== 
==2615== 4,000 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2615==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2615==    by 0x1091E7: main (c5.c:9)
==2615== 
==2615== LEAK SUMMARY:
==2615==    definitely lost: 4,000 bytes in 1 blocks
==2615==    indirectly lost: 0 bytes in 0 blocks
==2615==      possibly lost: 0 bytes in 0 blocks
==2615==    still reachable: 0 bytes in 0 blocks
==2615==         suppressed: 0 bytes in 0 blocks
==2615== 
==2615== For lists of detected and suppressed errors, rerun with: -s
==2615== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

No fim programa foi utilizado um free para a variável intArray.